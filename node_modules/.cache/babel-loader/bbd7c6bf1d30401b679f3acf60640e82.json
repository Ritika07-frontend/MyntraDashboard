{"ast":null,"code":"var _dec,\n    _class,\n    _jsxFileName = \"/Users/ritikapathak/Desktop/assignment/src/js/components/App/AppLayout.tsx\";\n\nimport React from \"react\";\nimport './appLayout.css';\nimport { connect } from './../../common/ReduxDecorator';\nimport Dashboard from \"../screens/dashboard\";\nlet AppLayout = (_dec = connect(store => {\n  if (!store) return {};\n  return {\n    projectSelected: store.issueResolution.projectid,\n    projectList: store.issueResolution.getProjectList\n  };\n}), _dec(_class = class AppLayout extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {};\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Dashboard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}) || _class);\nexport { AppLayout as default };","map":{"version":3,"sources":["/Users/ritikapathak/Desktop/assignment/src/js/components/App/AppLayout.tsx"],"names":["React","connect","Dashboard","AppLayout","store","projectSelected","issueResolution","projectid","projectList","getProjectList","Component","state","render"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;AAIA,SAASC,OAAT,QAAwB,+BAAxB;AAKA,OAAOC,SAAP,MAAsB,sBAAtB;IAYqBC,S,WAVpBF,OAAO,CACHG,KAAD,IAAqC;AACjC,MAAI,CAACA,KAAL,EAAY,OAAQ,EAAR;AAEZ,SAAO;AACHC,IAAAA,eAAe,EAAED,KAAK,CAACE,eAAN,CAAsBC,SADpC;AAEHC,IAAAA,WAAW,EAAEJ,KAAK,CAACE,eAAN,CAAsBG;AAFhC,GAAP;AAIH,CARG,C,gBAAR,MAUqBN,SAVrB,SAUuCH,KAAK,CAACU,SAV7C,CAUiE;AAAA;AAAA;AAAA,SAC7DC,KAD6D,GACrD,EADqD;AAAA;;AAK7DC,EAAAA,MAAM,GAAoB;AAEtB,wBACI,uDACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAZ4D,C;SAA5CT,S","sourcesContent":["import React from \"react\";\r\nimport './appLayout.css'\r\nimport NestedRouter from \"./../core/components/NestedRouter/NestedRouter\";\r\nimport { AppStoreProps, AppProps } from \"./App.interfaces\";\r\nimport { StoreType } from '../../common/resources/redux/types';\r\nimport { connect } from './../../common/ReduxDecorator';\r\nimport { getApiConfig } from './../../common/appConfig'\r\nimport { Link } from \"react-router-dom\";\r\nimport xhttp from '../../common/utils/Network';\r\nimport { onProjectSelectAction } from './../../actions/IssueResolutionAction';\r\nimport Dashboard from \"../screens/dashboard\";\r\n\r\n@connect(\r\n    (store: StoreType): AppStoreProps => {\r\n        if (!store) return ({} as unknown) as AppStoreProps;\r\n\r\n        return {\r\n            projectSelected: store.issueResolution.projectid,\r\n            projectList: store.issueResolution.getProjectList\r\n        }\r\n    }\r\n)\r\nexport default class AppLayout extends React.Component<AppProps> {\r\n    state = {\r\n\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n\r\n        return (\r\n            <>\r\n                <Dashboard />\r\n            </>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}