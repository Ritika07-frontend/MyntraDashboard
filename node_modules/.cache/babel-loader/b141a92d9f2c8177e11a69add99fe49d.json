{"ast":null,"code":"var _dec,\n    _class,\n    _jsxFileName = \"/Users/ritikapathak/Desktop/assignment/src/js/components/screens/dashboard/index.tsx\";\n\nimport React from 'react';\nimport { connect } from '../../../common/ReduxDecorator';\nimport { Typography, Pagination, Carousel } from 'antd';\nimport { Flex, NonFlex } from './styled/dashboard.styled';\nimport data from './../../../common/data.json';\nconst {\n  Title,\n  Text\n} = Typography;\nlet Dashboard = (_dec = connect(store => {\n  if (!store) return {};\n  return {\n    categories: store.sideNav.categories,\n    brand: store.sideNav.brand\n  };\n}), _dec(_class = class Dashboard extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      currentPage: 1,\n      postPerPage: 4,\n      currentPost: [],\n      categories: [],\n      brand: [],\n      filteredData: []\n    };\n\n    this.componentDidMount = () => {\n      this.getData();\n    };\n\n    this.componentDidUpdate = prevprops => {\n      if (this.props.categories !== prevprops.categories) {\n        this.setState({\n          categories: this.props.categories\n        });\n      }\n\n      if (this.props.brand !== prevprops.brand) {\n        this.setState({\n          brand: this.props.brand\n        });\n      }\n    };\n\n    this.getData = () => {\n      const {\n        currentPage,\n        postPerPage\n      } = this.state;\n      const indexOfLastPost = currentPage * postPerPage;\n      const indexOfFirstPost = indexOfLastPost - postPerPage;\n      const currentPost = data.slice(indexOfFirstPost, indexOfLastPost);\n      this.setState({\n        currentPost: currentPost\n      });\n    };\n\n    this.fetchMore = num => {\n      this.setState({\n        currentPage: num\n      }, () => {\n        this.getData();\n      });\n    };\n\n    this.getFilteredData = () => {\n      const {\n        currentPost,\n        categories,\n        brand\n      } = this.state;\n      return currentPost.filter(filteredData => {\n        let filter = true;\n\n        if (categories.length !== 0 && !categories.includes(filteredData.type)) {\n          filter = false;\n        }\n\n        if (brand.length !== 0 && !brand.includes(filteredData.brand)) {\n          filter = false;\n        }\n\n        return filter;\n      });\n    };\n  }\n\n  render() {\n    const filteredData = this.getFilteredData();\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Flex, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, filteredData.map((v, k) => {\n      return /*#__PURE__*/React.createElement(NonFlex, {\n        width: \"40%\",\n        height: \"20%\",\n        margin: \"30px\",\n        key: \"post\" + k,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Carousel, {\n        autoplay: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 33\n        }\n      }, v.pictures && v.pictures.map((pic, k) => {\n        return /*#__PURE__*/React.createElement(NonFlex, {\n          width: \"100%\",\n          key: k + \"pic\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: window.location.origin + \"/\" + pic,\n          style: {\n            backgroundImage: \"fit-content\"\n          },\n          width: \"100%\",\n          height: \"100%\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 53\n          }\n        }));\n      })), /*#__PURE__*/React.createElement(Title, {\n        level: 5,\n        style: {\n          marginBottom: \"0px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 33\n        }\n      }, v.Brand), /*#__PURE__*/React.createElement(Text, {\n        style: {\n          color: \"rgba(0, 0, 0, 0.85)\",\n          fontWeight: \"lighter\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 33\n        }\n      }, v.Type), /*#__PURE__*/React.createElement(Title, {\n        level: 5,\n        style: {\n          marginTop: \"0px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 33\n        }\n      }, \"Rs. \", v.Price));\n    }), /*#__PURE__*/React.createElement(Flex, {\n      flexDirection: \"row-reverse\",\n      width: \"100%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Pagination, {\n      defaultCurrent: 1,\n      total: data.length,\n      pageSize: 4,\n      onChange: this.fetchMore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}) || _class);\nexport { Dashboard as default };","map":{"version":3,"sources":["/Users/ritikapathak/Desktop/assignment/src/js/components/screens/dashboard/index.tsx"],"names":["React","connect","Typography","Pagination","Carousel","Flex","NonFlex","data","Title","Text","Dashboard","store","categories","sideNav","brand","Component","state","currentPage","postPerPage","currentPost","filteredData","componentDidMount","getData","componentDidUpdate","prevprops","props","setState","indexOfLastPost","indexOfFirstPost","slice","fetchMore","num","getFilteredData","filter","length","includes","type","render","map","v","k","pictures","pic","window","location","origin","backgroundImage","marginBottom","Brand","color","fontWeight","Type","marginTop","Price"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from '../../../common/ReduxDecorator';\nimport { StoreType } from '../../../common/resources/redux/types';\nimport { Typography, Pagination, Carousel } from 'antd';\nimport { Flex, NonFlex } from './styled/dashboard.styled';\nimport { DashboardStoreProps } from './interfaces/dasboard.interfaces';\nimport data from './../../../common/data.json';\n\nconst { Title, Text } = Typography;\n@connect(\n    (store: StoreType): DashboardStoreProps => {\n        if (!store) return ({} as unknown) as DashboardStoreProps;\n\n        return {\n            categories: store.sideNav.categories,\n            brand: store.sideNav.brand,\n        }\n    }\n)\n\nexport default class Dashboard extends React.Component<DashboardStoreProps> {\n    state = {\n        currentPage: 1,\n        postPerPage: 4,\n        currentPost: [],\n        categories: [],\n        brand: [],\n        filteredData: []\n    }\n\n    componentDidMount = () => {\n        this.getData()\n    }\n\n    componentDidUpdate = (prevprops: any) => {\n        if (this.props.categories !== prevprops.categories) {\n            this.setState({\n                categories: this.props.categories\n            })\n        }\n\n        if (this.props.brand !== prevprops.brand) {\n            this.setState({\n                brand: this.props.brand\n            })\n        }\n    }\n\n    getData = () => {\n        const { currentPage, postPerPage } = this.state\n        const indexOfLastPost = currentPage * postPerPage\n        const indexOfFirstPost = indexOfLastPost - postPerPage\n        const currentPost = data.slice(indexOfFirstPost, indexOfLastPost)\n        this.setState({\n            currentPost: currentPost\n        })\n    }\n\n    fetchMore = (num: any) => {\n        this.setState({\n            currentPage: num,\n        }, () => {\n            this.getData()\n        })\n    }\n\n    getFilteredData = () => {\n        const { currentPost\n            , categories, brand\n        }: any = this.state;\n\n        return currentPost.filter((filteredData: any) => {\n            let filter = true;\n            if (categories.length !== 0 && !categories.includes(filteredData.type)) {\n                filter = false;\n            }\n\n            if (brand.length !== 0 && !brand.includes(filteredData.brand)) {\n                filter = false;\n            }\n\n            return filter;\n        });\n    }\n\n    render() {\n        const filteredData = this.getFilteredData();\n        return (\n            <>\n                <Flex>\n                    {filteredData.map((v: any, k: number) => {\n                        return (\n                            <NonFlex width=\"40%\" height=\"20%\" margin=\"30px\" key={\"post\" + k}>\n                                <Carousel autoplay>\n                                    {\n                                        v.pictures && v.pictures.map((pic: string, k: number) => {\n                                            return (\n                                                <NonFlex width=\"100%\" key={k + \"pic\"}>\n                                                    <img src={window.location.origin + \"/\" + pic} style={{ backgroundImage: \"fit-content\" }} width=\"100%\" height=\"100%\"></img>\n                                                </NonFlex>\n                                            )\n                                        })\n                                    }\n                                </Carousel>\n                                <Title level={5} style={{ marginBottom: \"0px\" }}>{v.Brand}</Title>\n                                <Text style={{ color: \"rgba(0, 0, 0, 0.85)\", fontWeight: \"lighter\" }}>{v.Type}</Text>\n                                <Title level={5} style={{ marginTop: \"0px\" }}>Rs. {v.Price}</Title>\n                            </NonFlex>\n                        )\n                    })}\n                    <Flex flexDirection=\"row-reverse\" width=\"100%\">\n                        <Pagination defaultCurrent={1} total={data.length} pageSize={4} onChange={this.fetchMore} />\n                    </Flex>\n                </Flex>\n            </>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}