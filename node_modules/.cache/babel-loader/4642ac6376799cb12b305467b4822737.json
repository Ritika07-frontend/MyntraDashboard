{"ast":null,"code":"import { connect as reduxConnect } from \"react-redux\";\nimport store from \"./../store\";\n// connect decorator\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function connect(cb) {\n  // map state to props\n  function mapStateToProps() {\n    const nextProps = cb(store.getState());\n    return nextProps;\n  } // map dispatch to props\n\n\n  function mapDispatchToProps(dispatch) {\n    return {\n      dispatch: action => {\n        dispatch(action);\n      }\n    };\n  }\n\n  return target => {\n    // reduxConnect will subscribe the store\n    // for the returned values in callback\n    return reduxConnect(mapStateToProps, mapDispatchToProps)(target);\n  };\n}","map":{"version":3,"sources":["/Users/ritikapathak/Desktop/assignment/src/js/common/ReduxDecorator.ts"],"names":["connect","reduxConnect","store","cb","mapStateToProps","nextProps","getState","mapDispatchToProps","dispatch","action","target"],"mappings":"AAAA,SAASA,OAAO,IAAIC,YAApB,QAAwC,aAAxC;AAEA,OAAOC,KAAP,MAAkB,YAAlB;AAQA;AACA;AACA,OAAO,SAASF,OAAT,CAAiBG,EAAjB,EAA2D;AAChE;AACA,WAASC,eAAT,GAAsC;AACpC,UAAMC,SAAS,GAAGF,EAAE,CAACD,KAAK,CAACI,QAAN,EAAD,CAApB;AACA,WAAOD,SAAP;AACD,GAL+D,CAOhE;;;AACA,WAASE,kBAAT,CACEC,QADF,EAE0B;AACxB,WAAO;AACLA,MAAAA,QAAQ,EAAGC,MAAD,IAA8B;AACtCD,QAAAA,QAAQ,CAACC,MAAD,CAAR;AACD;AAHI,KAAP;AAKD;;AAED,SAAQC,MAAD,IAA0C;AAC/C;AACA;AACA,WAAOT,YAAY,CAACG,eAAD,EAAkBG,kBAAlB,CAAZ,CACLG,MADK,CAAP;AAGD,GAND;AAOD","sourcesContent":["import { connect as reduxConnect } from \"react-redux\";\nimport { Dispatch, ComponentType } from \"react\";\nimport store from \"./../store\";\n\nimport {\n  MapDispatchToPropsType,\n  ActionType,\n  StoreType\n} from \"./resources/redux/types\";\n\n// connect decorator\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function connect(cb: (store: StoreType) => StoreType): any {\n  // map state to props\n  function mapStateToProps(): StoreType {\n    const nextProps = cb(store.getState());\n    return nextProps;\n  }\n\n  // map dispatch to props\n  function mapDispatchToProps(\n    dispatch: Dispatch<ActionType>\n  ): MapDispatchToPropsType {\n    return {\n      dispatch: (action: ActionType): void => {\n        dispatch(action);\n      }\n    };\n  }\n\n  return (target: ComponentType): ComponentType => {\n    // reduxConnect will subscribe the store\n    // for the returned values in callback\n    return reduxConnect(mapStateToProps, mapDispatchToProps)<ComponentType>(\n      target\n    );\n  };\n}\n"]},"metadata":{},"sourceType":"module"}