{"ast":null,"code":"var _dec,\n    _class,\n    _jsxFileName = \"/Users/ritikapathak/Desktop/assignment/src/js/components/screens/dashboard/index.tsx\";\n\nimport React from 'react';\nimport { connect } from '../../../common/ReduxDecorator';\nimport { Typography, Pagination, Carousel } from 'antd';\nimport data from './../../../common/data.json';\nconst {\n  Title,\n  Text\n} = Typography;\nlet Dashboard = (_dec = connect(store => {\n  if (!store) return {};\n  return {\n    categories: store.sideNav.categories,\n    brand: store.sideNav.brand,\n    price: store.sideNav.price,\n    color: store.sideNav.color\n  };\n}), _dec(_class = class Dashboard extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      currentPage: 1,\n      postPerPage: 4,\n      currentPost: [],\n      categories: [],\n      brand: [],\n      getPrice: [],\n      getColor: []\n    };\n\n    this.componentDidMount = () => {\n      this.getData();\n    };\n\n    this.componentDidUpdate = prevprops => {\n      // const { getCategories, getBrand, getPrice, getColor } = this.props\n      // const arr = [getCategories, getBrand, getPrice, getColor]\n      // arr.map((v, k) => {\n      //     if(v !== prevprops.v){\n      //         this.setState({\n      //             v : v\n      //         })\n      //     }\n      // })\n      if (this.props.categories !== prevprops.categories) {\n        this.setState({\n          categories: this.props.categories\n        });\n      }\n\n      if (this.props.brand !== prevprops.brand) {\n        this.setState({\n          brand: this.props.brand\n        });\n      } // if (this.props.getPrice !== prevprops.getPrice) {\n      //     this.setState({\n      //         getPrice: this.props.getPrice\n      //     })\n      // }\n      // if (this.props.getColor !== prevprops.getColor) {\n      //     this.setState({\n      //         getColor: this.props.getColor\n      //     })\n      // }\n\n    };\n\n    this.getData = () => {\n      const {\n        currentPage,\n        postPerPage\n      } = this.state;\n      const indexOfLastPost = currentPage * postPerPage;\n      const indexOfFirstPost = indexOfLastPost - postPerPage;\n      const currentPost = data.slice(indexOfFirstPost, indexOfLastPost);\n      this.setState({\n        currentPost: currentPost\n      });\n    };\n\n    this.fetchMore = num => {\n      this.setState({\n        currentPage: num\n      }, () => {\n        this.getData();\n      });\n    };\n\n    this.getFilteredData = () => {\n      const {\n        currentPost,\n        categories,\n        brand\n      } = this.state;\n      return currentPost.filter(filteredData => {\n        let filter = true;\n\n        if (categories.length !== 0 && !categories.includes(filteredData.Type)) {\n          filter = false;\n        }\n\n        if (brand.length !== 0 && !brand.includes(filteredData.Brand)) {\n          filter = false;\n        }\n\n        return filter;\n      });\n    };\n  }\n\n  render() {\n    const {\n      currentPost\n    } = this.state;\n    const data = this.getFilteredData();\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, console.log(\"99\", currentPost, data), data.map((v, k) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: \"40%\",\n          margin: \"20px\"\n        },\n        key: \"post\" + k,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Carousel, {\n        autoplay: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 33\n        }\n      }, v.pictures && v.pictures.map((pic, k) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            width: \"100%\"\n          },\n          key: k + \"pic\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: window.location.origin + \"/\" + pic,\n          style: {\n            backgroundImage: \"fit-content\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 53\n          }\n        }));\n      })), /*#__PURE__*/React.createElement(Title, {\n        level: 5,\n        style: {\n          marginBottom: \"0px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 33\n        }\n      }, v.Brand), /*#__PURE__*/React.createElement(Text, {\n        style: {\n          color: \"rgba(0, 0, 0, 0.85)\",\n          fontWeight: \"lighter\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 33\n        }\n      }, v.Type), /*#__PURE__*/React.createElement(Title, {\n        level: 5,\n        style: {\n          marginTop: \"0px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 33\n        }\n      }, \"Rs. \", v.Price));\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row-reverse\",\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Pagination, {\n      defaultCurrent: 1,\n      total: data.length,\n      pageSize: 4,\n      onChange: this.fetchMore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}) || _class);\nexport { Dashboard as default };","map":{"version":3,"sources":["/Users/ritikapathak/Desktop/assignment/src/js/components/screens/dashboard/index.tsx"],"names":["React","connect","Typography","Pagination","Carousel","data","Title","Text","Dashboard","store","categories","sideNav","brand","price","color","Component","state","currentPage","postPerPage","currentPost","getPrice","getColor","componentDidMount","getData","componentDidUpdate","prevprops","props","setState","indexOfLastPost","indexOfFirstPost","slice","fetchMore","num","getFilteredData","filter","filteredData","length","includes","Type","Brand","render","display","flexWrap","console","log","map","v","k","width","margin","pictures","pic","window","location","origin","backgroundImage","marginBottom","fontWeight","marginTop","Price","flexDirection"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from '../../../common/ReduxDecorator';\nimport { StoreType } from '../../../common/resources/redux/types';\nimport { Typography, Pagination, Carousel } from 'antd';\nimport { DashboardStoreProps, DashboardProps } from './interfaces/dasboard.interfaces';\nimport data from './../../../common/data.json';\n\nconst { Title, Text } = Typography;\n@connect(\n    (store: StoreType): DashboardStoreProps => {\n        if (!store) return ({} as unknown) as DashboardStoreProps;\n\n        return {\n            categories: store.sideNav.categories,\n            brand: store.sideNav.brand,\n            price: store.sideNav.price,\n            color: store.sideNav.color\n        }\n    }\n)\n\nexport default class Dashboard extends React.Component<DashboardStoreProps> {\n    state = {\n        currentPage: 1,\n        postPerPage: 4,\n        currentPost: [],\n        categories: [],\n        brand: [],\n        getPrice: [],\n        getColor: [],\n    }\n\n    componentDidMount = () => {\n        this.getData()\n    }\n\n    componentDidUpdate = (prevprops: any) => {\n        // const { getCategories, getBrand, getPrice, getColor } = this.props\n        // const arr = [getCategories, getBrand, getPrice, getColor]\n        // arr.map((v, k) => {\n        //     if(v !== prevprops.v){\n        //         this.setState({\n        //             v : v\n        //         })\n        //     }\n        // })\n\n        if (this.props.categories !== prevprops.categories) {\n            this.setState({\n                categories: this.props.categories\n            })\n        }\n\n        if (this.props.brand !== prevprops.brand) {\n            this.setState({\n                brand: this.props.brand\n            })\n        }\n\n        // if (this.props.getPrice !== prevprops.getPrice) {\n        //     this.setState({\n        //         getPrice: this.props.getPrice\n        //     })\n        // }\n\n        // if (this.props.getColor !== prevprops.getColor) {\n        //     this.setState({\n        //         getColor: this.props.getColor\n        //     })\n        // }\n\n    }\n\n    getData = () => {\n        const { currentPage, postPerPage } = this.state\n        const indexOfLastPost = currentPage * postPerPage\n        const indexOfFirstPost = indexOfLastPost - postPerPage\n        const currentPost = data.slice(indexOfFirstPost, indexOfLastPost)\n        this.setState({\n            currentPost: currentPost\n        })\n    }\n\n    fetchMore = (num: any) => {\n        this.setState({\n            currentPage: num,\n        }, () => {\n            this.getData()\n        })\n    }\n\n    getFilteredData = () => {\n        const { currentPost\n            , categories, brand\n        }: any = this.state;\n\n        return currentPost.filter((filteredData: any) => {\n            let filter = true;\n            if (categories.length !== 0 && !categories.includes(filteredData.Type)) {\n                filter = false;\n            }\n\n            if (brand.length !== 0 && !brand.includes(filteredData.Brand)) {\n                filter = false;\n            }\n\n            return filter;\n        });\n    }\n\n    render() {\n        const { currentPost } = this.state;\n        const data = this.getFilteredData();\n        return (\n            <>\n                <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n                    {console.log(\"99\", currentPost, data)}\n                    {data.map((v: any, k: number) => {\n                        return (\n                            <div style={{ width: \"40%\", margin: \"20px\" }} key={\"post\" + k}>\n                                <Carousel autoplay>\n                                    {\n                                        v.pictures && v.pictures.map((pic: string, k: number) => {\n                                            return (\n                                                <div style={{ width: \"100%\" }} key={k + \"pic\"}>\n                                                    <img src={window.location.origin + \"/\" + pic} style={{ backgroundImage: \"fit-content\" }}></img>\n                                                </div>\n                                            )\n                                        })\n                                    }\n                                </Carousel>\n                                <Title level={5} style={{ marginBottom: \"0px\" }}>{v.Brand}</Title>\n                                <Text style={{ color: \"rgba(0, 0, 0, 0.85)\", fontWeight: \"lighter\" }}>{v.Type}</Text>\n                                <Title level={5} style={{ marginTop: \"0px\" }}>Rs. {v.Price}</Title>\n                            </div>\n                        )\n                    })}\n                    <div style={{ display: \"flex\", flexDirection: \"row-reverse\", width: \"100%\" }}>\n                        <Pagination defaultCurrent={1} total={data.length} pageSize={4} onChange={this.fetchMore} />\n                    </div>\n                </div>\n            </>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}